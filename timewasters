#! /bin/python3

import os
import operator


def keywithmaxval(d, i):
     if i == 0:
         return '\n'
     v = str(max(list(d.values())))
     k = str(list(d.keys())[list(d.values()).index(max(list(d.values())))])
     d[k] = 0
     if k.startswith(tuple(exceptions)):
         return keywithmaxval(d, i)
     print('Create alias for ' + k + '(' + v + ')? Y/y/N/n :')
     to_alias = input().upper()
     if to_alias == 'Y':
         print('Enter alias :')
         alias = input().rstrip()
         sh_rc.write('\nalias ' + alias + '="' + k + '"')
     return v + ' : ' + k + '\n' + keywithmaxval(d, i-1) 


# exceptions = ['vim', 'su root']
homedir = os.path.expanduser('~')
sh_history = open(homedir + '/.zsh_history', 'r')
sh_rc = open(homedir + '/.zshrc', 'a')
except_file = open('./timewasters_exceptions', 'r')
exceptions = except_file.readlines()
exceptions = [x.strip() for x in exceptions]
print(exceptions)
content = sh_history.readlines()
cmd_map = {}
for line in content:
    line = line.strip().split(';')
    if len(line) > 1:
        if str(line[1]) not in cmd_map:
            cmd_map[str(line[1])] = 0
        else:
            cmd_map[str(line[1])] = cmd_map[str(line[1])] + 1
keywithmaxval(cmd_map, 5)
print('Restart shell to load new alias')
sh_rc.close()
sh_history.close()

